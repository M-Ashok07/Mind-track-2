version: 0.2

env:
  variables:
    REGION: ap-south-1
    CLUSTER: mind-track-cluster
    ECR_REPO: mind-track-app
    NAMESPACE: mind-track

phases:
  install:
    commands:
      - echo "Installing kubectl..."
      - curl -sSL -o /usr/local/bin/kubectl https://amazon-eks.s3.${REGION}.amazonaws.com/1.29.0/2024-04-19/bin/linux/amd64/kubectl
      - chmod +x /usr/local/bin/kubectl

  pre_build:
    commands:
      - echo "Logging into Amazon ECR..."
      - aws --version
      - aws ecr get-login-password --region $REGION | docker login --username AWS --password-stdin 304534110140.dkr.ecr.${REGION}.amazonaws.com
      - COMMIT_ID=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c1-7)
      - IMAGE_URI="304534110140.dkr.ecr.${REGION}.amazonaws.com/${ECR_REPO}:${COMMIT_ID}"
      - echo "Using IMAGE_URI=$IMAGE_URI"
      - export IMAGE_URI

  build:
    commands:
      - echo "Checking files before Docker build..."
      - pwd && ls -al
      - echo "Building Docker image..."
      - docker build -t $IMAGE_URI -f Dockerfile .

  post_build:
    commands:
      - echo "Pushing Docker image to ECR..."
      - docker push $IMAGE_URI
      - echo "Updating kubeconfig for EKS cluster..."
      - aws eks update-kubeconfig --region $REGION --name $CLUSTER
      - echo "Applying Kubernetes manifests..."
      - kubectl apply -f k8s/deployment-final.yaml
      - kubectl apply -f k8s/service.yaml
      - kubectl apply -f k8s/ingress.yaml
      - echo "Deployment completed successfully!"

# Optional: remove artifacts section if not needed
# artifacts:
#   files:
#     - k8s/deployment-final.yaml
